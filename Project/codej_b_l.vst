entity codej_b_l is
   port (
      daytime : in      bit;
      code    : in      bit_vector(3 downto 0);
      reset   : in      bit;
      clk     : in      bit;
      vdd     : in      bit;
      vss     : in      bit;
      door    : out     bit;
      alarm   : out     bit
 );
end codej_b_l;

architecture structural of codej_b_l is
Component nxr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i1  : in      bit;
      i0  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component an12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a3_x2
   port (
      i0  : in      bit;
      i2  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2ao222_x4
   port (
      i1  : in      bit;
      i0  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      i4  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component noa22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal code_cs        : bit_vector( 2 downto 0);
signal not_code       : bit_vector( 3 downto 2);
signal not_code_cs    : bit_vector( 1 downto 1);
signal on12_x1_sig    : bit;
signal o3_x2_sig      : bit;
signal o3_x2_3_sig    : bit;
signal o3_x2_2_sig    : bit;
signal o2_x2_sig      : bit;
signal nxr2_x1_sig    : bit;
signal not_aux4       : bit;
signal not_aux3       : bit;
signal not_aux2       : bit;
signal not_aux13      : bit;
signal not_aux12      : bit;
signal not_aux11      : bit;
signal noa22_x1_sig   : bit;
signal noa22_x1_2_sig : bit;
signal no2_x1_sig     : bit;
signal na4_x1_sig     : bit;
signal na4_x1_2_sig   : bit;
signal na3_x1_sig     : bit;
signal inv_x2_sig     : bit;
signal inv_x2_2_sig   : bit;
signal aux7           : bit;
signal aux14          : bit;
signal aux12          : bit;
signal an12_x1_sig    : bit;
signal an12_x1_2_sig  : bit;
signal a3_x2_sig      : bit;
signal a3_x2_2_sig    : bit;
signal a2_x2_sig      : bit;

begin

not_aux13_ins : on12_x1
   port map (
      i0  => code_cs(2),
      i1  => code_cs(1),
      q   => not_aux13,
      vdd => vdd,
      vss => vss
   );

not_aux3_ins : o2_x2
   port map (
      i1  => not_aux2,
      i0  => not_code_cs(1),
      q   => not_aux3,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_ins : nxr2_x1
   port map (
      i0  => code_cs(0),
      i1  => code(3),
      nq  => nxr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_ins : no2_x1
   port map (
      i0  => code(2),
      i1  => code(0),
      nq  => no2_x1_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => no2_x1_sig,
      i1  => not_code_cs(1),
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

not_aux11_ins : na2_x1
   port map (
      i0  => a2_x2_sig,
      i1  => nxr2_x1_sig,
      nq  => not_aux11,
      vdd => vdd,
      vss => vss
   );

not_aux12_ins : inv_x2
   port map (
      i   => aux12,
      nq  => not_aux12,
      vdd => vdd,
      vss => vss
   );

not_aux4_ins : on12_x1
   port map (
      i0  => code_cs(0),
      i1  => code(0),
      q   => not_aux4,
      vdd => vdd,
      vss => vss
   );

not_code_cs_1_ins : inv_x2
   port map (
      i   => code_cs(1),
      nq  => not_code_cs(1),
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => code(0),
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

a3_x2_ins : a3_x2
   port map (
      i0  => inv_x2_sig,
      i1  => not_code(2),
      i2  => not_code(3),
      q   => a3_x2_sig,
      vdd => vdd,
      vss => vss
   );

not_aux2_ins : on12_x1
   port map (
      i0  => a3_x2_sig,
      i1  => code_cs(0),
      q   => not_aux2,
      vdd => vdd,
      vss => vss
   );

not_code_3_ins : inv_x2
   port map (
      i   => code(3),
      nq  => not_code(3),
      vdd => vdd,
      vss => vss
   );

not_code_2_ins : inv_x2
   port map (
      i   => code(2),
      nq  => not_code(2),
      vdd => vdd,
      vss => vss
   );

aux14_ins : no2_x1
   port map (
      i0  => code(1),
      i1  => reset,
      nq  => aux14,
      vdd => vdd,
      vss => vss
   );

aux12_ins : an12_x1
   port map (
      i0  => reset,
      i1  => code(1),
      q   => aux12,
      vdd => vdd,
      vss => vss
   );

o3_x2_ins : o3_x2
   port map (
      i2  => not_aux4,
      i0  => code(3),
      i1  => not_code(2),
      q   => o3_x2_sig,
      vdd => vdd,
      vss => vss
   );

aux7_ins : no2_x1
   port map (
      i1  => o3_x2_sig,
      i0  => not_code_cs(1),
      nq  => aux7,
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => aux7,
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

o3_x2_2_ins : o3_x2
   port map (
      i0  => not_aux2,
      i1  => code_cs(2),
      i2  => code_cs(1),
      q   => o3_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

noa22_x1_ins : noa22_x1
   port map (
      i0  => o3_x2_2_sig,
      i1  => inv_x2_2_sig,
      i2  => not_aux12,
      nq  => noa22_x1_sig,
      vdd => vdd,
      vss => vss
   );

code_cs_0_ins : sff1_x4
   port map (
      ck  => clk,
      i   => noa22_x1_sig,
      q   => code_cs(0),
      vdd => vdd,
      vss => vss
   );

o2_x2_ins : o2_x2
   port map (
      i0  => not_aux12,
      i1  => not_aux11,
      q   => o2_x2_sig,
      vdd => vdd,
      vss => vss
   );

noa22_x1_2_ins : noa22_x1
   port map (
      i0  => code_cs(2),
      i1  => not_aux4,
      i2  => o2_x2_sig,
      nq  => noa22_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

code_cs_1_ins : sff1_x4
   port map (
      ck  => clk,
      i   => noa22_x1_2_sig,
      q   => code_cs(1),
      vdd => vdd,
      vss => vss
   );

an12_x1_ins : an12_x1
   port map (
      i0  => not_aux3,
      i1  => aux14,
      q   => an12_x1_sig,
      vdd => vdd,
      vss => vss
   );

code_cs_2_ins : sff1_x4
   port map (
      ck  => clk,
      i   => an12_x1_sig,
      q   => code_cs(2),
      vdd => vdd,
      vss => vss
   );

an12_x1_2_ins : an12_x1
   port map (
      i0  => aux7,
      i1  => aux12,
      q   => an12_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_ins : na4_x1
   port map (
      i0  => daytime,
      i1  => code(0),
      i2  => code(2),
      i3  => code(3),
      nq  => na4_x1_sig,
      vdd => vdd,
      vss => vss
   );

a3_x2_2_ins : a3_x2
   port map (
      i0  => aux14,
      i2  => not_aux3,
      i1  => na4_x1_sig,
      q   => a3_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => code(2),
      i1  => code(0),
      i2  => not_code(3),
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

o3_x2_3_ins : o3_x2
   port map (
      i0  => na3_x1_sig,
      i1  => not_aux13,
      i2  => code_cs(0),
      q   => o3_x2_3_sig,
      vdd => vdd,
      vss => vss
   );

alarm_ins : oa2ao222_x4
   port map (
      i1  => o3_x2_3_sig,
      i0  => a3_x2_2_sig,
      i2  => code_cs(2),
      i3  => not_aux11,
      i4  => an12_x1_2_sig,
      q   => alarm,
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => code(3),
      i1  => daytime,
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_2_ins : na4_x1
   port map (
      i0  => code(0),
      i1  => code(2),
      i2  => aux14,
      i3  => on12_x1_sig,
      nq  => na4_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

door_ins : noa22_x1
   port map (
      i0  => not_aux13,
      i1  => not_code(3),
      i2  => na4_x1_2_sig,
      nq  => door,
      vdd => vdd,
      vss => vss
   );


end structural;
